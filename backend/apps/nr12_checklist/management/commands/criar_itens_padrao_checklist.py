#python manage.py criar_itens_padrao_checklist
from django.core.management.base import BaseCommand
from backend.apps.nr12_checklist.models import CategoriaChecklistNR12, ItemChecklistPadrao

class Command(BaseCommand):
    help = 'Cria os itens padr√£o de checklist NR12 por categoria'

    def handle(self, *args, **options):
        self.stdout.write('üõ†Ô∏è Criando itens padr√£o de Checklist NR12...\n')

        itens_por_categoria = {
            'ESC': [
                'Verificar buzina de advert√™ncia',
                'Verificar alarme de r√© funcional',
                'Checar sinaliza√ß√£o de seguran√ßa',
                'Verificar bot√£o de parada de emerg√™ncia',
                'Verificar cinto de seguran√ßa'
            ],
            'CAM': [
                'Checar pneus e rodas',
                'Verificar freios de servi√ßo e estacionamento',
                'Verificar ilumina√ß√£o e setas',
                'Verificar espelhos retrovisores',
                'Verificar cinto de seguran√ßa'
            ],
            'CAR': [
                'Verificar controle de basculamento',
                'Verificar estrutura do chassi',
                'Verificar sistema hidr√°ulico de eleva√ß√£o',
                'Checar alarme de r√© e buzina'
            ],
            'CPA': [
                'Verificar reservat√≥rio de √≥leo',
                'Checar vazamentos',
                'Verificar filtros e mangueiras',
                'Inspecionar estrutura do compressor'
            ],
            'GER': [
                'Verificar painel el√©trico',
                'Checar n√≠vel de combust√≠vel',
                'Verificar aterramento do equipamento',
                'Checar vibra√ß√£o e ru√≠do'
            ]
        }

        total = 0
        for codigo, itens in itens_por_categoria.items():
            try:
                categoria = CategoriaChecklistNR12.objects.get(codigo=codigo)
            except CategoriaChecklistNR12.DoesNotExist:
                self.stdout.write(f'‚ùå Categoria {codigo} n√£o encontrada, pulei.')
                continue

            for descricao in itens:
                obj, created = ItemChecklistPadrao.objects.get_or_create(
                    categoria=categoria,
                    descricao=descricao
                )
                if created:
                    total += 1
                    self.stdout.write(f'  ‚úÖ {categoria.nome}: {descricao}')
                else:
                    self.stdout.write(f'  ‚ö†Ô∏è J√° existe: {categoria.nome} - {descricao}')

        self.stdout.write(f'\nüìã {total} itens padr√£o criados com sucesso!')
