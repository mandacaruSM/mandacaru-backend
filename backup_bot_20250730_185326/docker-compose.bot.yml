# ==========================================
# docker-compose.bot.yml
# Compose específico para o Bot Telegram
# ==========================================

version: '3.8'

services:
  mandacaru-bot:
    build:
      context: .
      dockerfile: Dockerfile.bot
    container_name: mandacaru-telegram-bot
    restart: unless-stopped
    
    # Variáveis de ambiente
    environment:
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - API_BASE_URL=${API_BASE_URL:-http://host.docker.internal:8000/api}
      - BOT_DEBUG=${BOT_DEBUG:-False}
      - ADMIN_IDS=${ADMIN_IDS}
      - SESSION_TIMEOUT_HOURS=${SESSION_TIMEOUT_HOURS:-24}
    
    # Arquivo de environment (alternativa)
    env_file:
      - .env
    
    # Volumes para logs persistentes
    volumes:
      - ./logs:/app/logs
      - ./mandacaru_bot:/app/mandacaru_bot:ro  # read-only para segurança
    
    # Rede para comunicação com Django
    networks:
      - mandacaru-network
    
    # Health check
    healthcheck:
      test: ["CMD", "python", "-c", "import sys; sys.exit(0)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    
    # Dependências
    depends_on:
      - redis
    
    # Logging
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Redis para cache (opcional)
  redis:
    image: redis:7-alpine
    container_name: mandacaru-redis
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - mandacaru-network
    ports:
      - "6379:6379"

networks:
  mandacaru-network:
    external: true  # Usar rede existente do Django
    # Ou criar nova rede:
    # driver: bridge

volumes:
  redis_data:
    driver: local

# ==========================================
# Como usar:
#
# 1. Criar rede (se não existir):
#    docker network create mandacaru-network
#
# 2. Subir apenas o bot:
#    docker-compose -f docker-compose.bot.yml up -d
#
# 3. Ver logs:
#    docker-compose -f docker-compose.bot.yml logs -f mandacaru-bot
#
# 4. Parar serviços:
#    docker-compose -f docker-compose.bot.yml down
#
# 5. Rebuild após mudanças:
#    docker-compose -f docker-compose.bot.yml up -d --build
# ==========================================